{"version":3,"file":"waveform-progress.js","sourceRoot":"","sources":["waveform-progress.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-underscore-dangle */\n\nimport {\n  LitElement,\n  html,\n  css,\n  PropertyValues,\n  TemplateResult,\n  CSSResult,\n} from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport ZoneOfSilence from './models/zone-of-silence';\n\n@customElement('waveform-progress')\nexport default class WaveformProgress extends LitElement {\n  @property({ type: Number }) percentComplete = 0;\n\n  @property({ type: String }) waveformUrl = '';\n\n  @property({ type: Boolean }) interactive = false;\n\n  @property({ type: Array }) zonesOfSilence: ZoneOfSilence[] = [];\n\n  // This is our internal, canonical source for the `percentComplete`.\n  // The public `percentComplete` will be getting modified by outside modifiers\n  // like the audio player, but since the user can scrub through the waveform,\n  // we need to be able to control when that value gets updated\n  @property({ type: Number }) private _percentComplete = 0;\n\n  private _userIsInteracting = false;\n\n  render(): TemplateResult {\n    return html`\n      <div class=\"container\">\n        <div id=\"fill\" style=\"width: ${this._percentComplete}%\"></div>\n        <img class=\"waveform-image\" src=\"${this.waveformUrl}\" />\n        ${this.zonesOfSilenceTemplate} ${this.interactive ? this.interactionCoverTemplate : ''}\n      </div>\n    `;\n  }\n\n  private get zonesOfSilenceTemplate(): TemplateResult {\n    return html`\n      ${this.zonesOfSilence.map(\n        (zone: ZoneOfSilence) => html`\n          <div\n            class=\"zone-of-silence\"\n            style=\"left: ${zone.startPercent}%; width: ${zone.endPercent - zone.startPercent}%\"\n          ></div>\n        `,\n      )}\n    `;\n  }\n\n  private get interactionCoverTemplate(): TemplateResult {\n    return html`\n      <div\n        id=\"dragcover\"\n        @mousedown=${this.dragstart}\n        @mouseup=${this.dragend}\n        @mouseleave=${this.dragend}\n        @mousemove=${this.drag}\n        @touchstart=${this.dragstart}\n        @touchend=${this.dragend}\n        @touchmove=${this.drag}\n      ></div>\n    `;\n  }\n\n  updated(changedProperties: PropertyValues): void {\n    if (!changedProperties.has('percentComplete') || this._userIsInteracting) {\n      return;\n    }\n\n    this._percentComplete = this.percentComplete;\n  }\n\n  private drag(e: MouseEvent): void {\n    /* istanbul ignore if */\n    if (!this._userIsInteracting) {\n      return;\n    }\n    this.updatePercentComplete(e);\n  }\n\n  private dragstart(e: MouseEvent): void {\n    this._userIsInteracting = true;\n    this.updatePercentComplete(e);\n  }\n\n  private dragend(): void {\n    this._userIsInteracting = false;\n  }\n\n  private updatePercentComplete(e: MouseEvent): void {\n    if (!this.container) { return; }\n    const containerOffset: number = this.container.offsetLeft;\n    const offsetX: number = e.pageX - containerOffset;\n    this._percentComplete = this.offsetXToPercent(offsetX);\n    this.dispatchValueChangeEvent();\n  }\n\n  private dispatchValueChangeEvent(): void {\n    const event = new CustomEvent('valuechange', {\n      detail: { value: this._percentComplete },\n    });\n    this.dispatchEvent(event);\n  }\n\n  private get dragcover(): HTMLElement | null {\n    return this.shadowRoot && this.shadowRoot.getElementById('dragcover');\n  }\n\n  private get container(): HTMLElement | null {\n    return this.shadowRoot && this.shadowRoot.querySelector('.container');\n  }\n\n  private offsetXToPercent(offsetX: number): number {\n    /* istanbul ignore if */\n    if (this.dragcover === null) {\n      return 0;\n    }\n    const width: number = this.dragcover.clientWidth;\n    const percentComplete: number = (offsetX / width) * 100;\n    return percentComplete;\n  }\n\n  static get styles(): CSSResult {\n    const fillColorCss = css`var(--fillColor, #3272b6)`;\n    const zoneOfSilenceColorCss = css`var(--zoneOfSilenceColor, #f6e652)`;\n    const waveformLeftRightMarginCss = css`var(--waveformLeftRightMarginSize, 10px)`;\n\n    return css`\n      :host {\n        display: inline-block;\n      }\n\n      #dragcover {\n        width: 100%;\n        height: 100%;\n        position: absolute;\n        touch-action: none;\n      }\n\n      .container {\n        display: block;\n        position: relative;\n        background-color: white;\n        height: 100%;\n        margin-left: ${waveformLeftRightMarginCss};\n        margin-right: ${waveformLeftRightMarginCss};\n      }\n\n      .waveform-image {\n        width: 100%;\n        height: 100%;\n        position: absolute;\n      }\n\n      .zone-of-silence {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        background: linear-gradient(\n          #000,\n          #000 47%,\n          ${zoneOfSilenceColorCss} 50%,\n          #000 53%,\n          #000 100%\n        );\n      }\n\n      #fill {\n        position: absolute;\n        height: 100%;\n        background-color: ${fillColorCss};\n      }\n    `;\n  }\n}\n"]}